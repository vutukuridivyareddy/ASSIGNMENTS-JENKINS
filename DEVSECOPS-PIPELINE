pipeline{
    agent any
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }
    environment {
       SCANNER_HOME=tool 'sonar-scanner'
       buildNumber= "${BUILD_NUMBER}"
    }
    stages{
        stage ('clean Workspace'){
            steps{
                cleanWs()
            }
        }
        stage ('checkout scm') {
            steps {
                git ' https://github.com/Venn1991/jpetstore-6.git'
            }
        }
        stage ('maven compile') {
            steps {
                sh 'mvn clean compile'
            }
        }
        stage ('maven Test') {
            steps {
                sh 'mvn test'
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Petshop \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=Petshop '''
                }
            }
        }
          stage("quality gate"){
            steps {
                script {
                  waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
           }
        }
         stage("package"){
            steps{
                sh 'mvn package'
            }
        }
        stage("dependency check"){
            steps{
                dependencyCheck additionalArguments: '--scan ./ --format XML', odcInstallation: 'DP-check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage("Build docker image"){
            steps{
                script{
                   sh "docker build -t divyadocker12345/petshop:${BUILD_NUMBER} ." 
                }
              
            }
          
        }
        stage("docker push"){
            steps{
                script{ 
                    withDockerRegistry(credentialsId: 'Docker-cred') {
                        sh "docker login -u divyadocker12345 -p ${Docker-cred}"
                        sh "docker push divyadocker12345/petshop:${BUILD_NUMBER}"
                    }
                }
            }
        }
        stage('trivy'){
            steps{
                script{
                    sh "trivy image divyadocker12345/petshop:${BUILD_NUMBER}"
                }
            }
        }
        stage('Delete the  container'){
            steps{
                script{
                    sh "docker rm -f myc1"
                }
            }
        }
        stage("container"){
            steps{
                script{
                   sh "docker run --name myc1 -d -p 8081:8080 divyadocker12345/petshop:${BUILD_NUMBER}"
                }
            }
        }
   }
}
